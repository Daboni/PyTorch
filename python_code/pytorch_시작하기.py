# -*- coding: utf-8 -*-
"""Pytorch_시작하기.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13HBSvtVm5-K4anRHySBKTBItgfJ2jC3y
"""

from __future__ import print_function
import torch

"""초기화 되지 않은 5x3 행렬 생성"""

x = torch.empty(5,3)
print(x)

"""무작위로 초기화된 5x3 행렬 생성"""

x = torch.rand(5,3)
print(x)

"""dtype이 long이고 0으로 채워진 5x3 행렬 생성"""

x = torch.zeros(5,3,dtype=torch.long)
print(x)

"""직접 tensor 생성"""

x = torch.tensor([5.5,3])
print(x)

"""행렬 크기 구하기"""

print(x.size())

"""연산"""

x = torch.rand(5,3)
print(x)
y = torch.rand(5,3)
print(y)

print(x+y)

print(torch.add(x,y))

result = torch.rand(5,3)
torch.add(x,y,out=result)
print(result)

"""바꿔치기(in-place) : in-place 방식으로 tensor의 값을 변경하는 연산 뒤에는 _ 가 붙는다."""

y.add_(x)
print(y)

"""크기 변경 : tensor의 크기(size)나 모양(shape)을 변경할 때 torch.view를 사용"""

x = torch.randn(4,4)
y = x.view(16)
z = x.view(-1,8)
print(x.size(),y.size(),z.size())

"""tensor가 하나의 값을 가지면 .item()을 이용하여 숫자 값을 가지고 옴"""

x = torch.randn(1)
print(x)
print(x.item())

"""Torch tensor를 Numpy로 변환"""

a = torch.ones(5)
print(a)

b = a.numpy()
print(b)

a.add_(1)
print(a)
print(b)

"""Numpy를 Torch tensor로 변환"""

import numpy as np
a = np.ones(5)
b = torch.from_numpy(a)
np.add(a,1,out=a)
print(a)
print(b)

"""numpy -> torch tensor와 그 반대 방향도 가능하다. 두 경우 모두 메모리 공간을 공유하므로 한쪽이 바뀌면 같이 바뀐다."""

